"""
在Python的对象模型中，有两种对象：类对象和实例对象。
类对象是在执行class语句时创建的，而实例对象是在调用类的时候创建的。
每调用一次类，便创建一个实例对象。
类对象只有一个，而实例对象可以有多个。
类对象和每个实例对象都分别拥有自己的命名空间，在各自的命名空间内存储属于自己的数据。
"""

"""
1、类对象
Python执行class语句时创建一个类对象和一个变量（名称就是类名称），变量引用类对象。与def类似，class也是可执行语句。导入类模块时，class语句被执行，创建类对象。
类中的赋值语句创建的变量是类的数据属性。与模块类似，类中的顶层赋值语句创建的变量才属于类对象。类的数据数据用“对象名.属性名”格式来访问。
类中的def语句定义的函数是类的方法属性，用“对象名.方法名()”格式来访问。
类的数据和方法由所有的实例对象共享
"""

"""
2、实例对象
实例对象通过调用类对象来创建（就像调用函数一样来调用类对象）。
每个实例对象继承类对象的属性，并获得自己的命名空间。
实例对象的“私有”属性。类的方法函数的第一个参数默认为self，表示引用方法的对象实例。在方法中对self的属性赋值才会创建属于实例对象的属性。
"""

